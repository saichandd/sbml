
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORELSEleftANDALSOleftNOTleftLESS_THANleftLESS_EQUALleftEQUALleftNOT_EQUALleftGREATER_THANleftGREATER_EQUALrightCONSleftINleftPLUSleftMINUSleftTIMESleftDIVIDEleftDIVleftMODrightEXPONENTrightUMINUSleftLBRACKETRBRACKETleftTUPLE_INDEXleftLPARENRPARENANDALSO COMMA CONS DIV DIVIDE EQUAL EXPONENT FALSE GREATER_EQUAL GREATER_THAN IN LBRACKET LESS_EQUAL LESS_THAN LPAREN MINUS MOD NOT NOT_EQUAL NUMBER ORELSE PLUS RBRACKET RPAREN STRING TIMES TRUE TUPLE_INDEXstatement : expressionexpression : expression PLUS expression\n\t\t\t\t\t| expression MINUS expression\n\t\t\t\t\t| expression TIMES expression\n\t\t\t\t\t| expression DIVIDE expression\n\t\t\t\t\t| expression EXPONENT expression\n\t\t\t\t\t| expression DIV expression\n\t\t\t\t\t| expression MOD expression\n\t\t\t\t\t| expression IN expression\n\t\t\t\t\t| expression CONS expression\n\t\t\t\t\t| expression LESS_THAN expression\n\t\t\t\t\t| expression LESS_EQUAL expression\n\t\t\t\t\t| expression EQUAL expression\n\t\t\t\t\t| expression NOT_EQUAL expression\n\t\t\t\t\t| expression GREATER_THAN expression\n\t\t\t\t\t| expression GREATER_EQUAL expression\n\t\t\t\t\t| expression ANDALSO expression\n\t\t\t\t\t| expression ORELSE expressionexpression : NUMBER\n\t\t\t\t\t| STRING\n\t\t\t\t\t| TRUE\n\t\t\t\t\t| FALSE\n\t\t\t\t\t| index\n\t\t\t\t\t| list\n\t\t\t\t\t| tuple\n\t\t\t\t\t| TUPLE_INDEXexpression : LPAREN expression RPARENexpression : MINUS expression %prec UMINUSexpression : NOT expressionindex : expression LBRACKET expression RBRACKETindex : TUPLE_INDEX expression tuplelist : LBRACKET inlist RBRACKETlist : LBRACKET RBRACKETinlist : expressioninlist : inlist COMMA expressiontuple : LPAREN intuple RPARENtuple : LPAREN RPARENintuple : expressionintuple : intuple COMMA expressionintuple : intuple COMMA'
    
_lr_action_items = {'NUMBER':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,61,64,66,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'STRING':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,61,64,66,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'TRUE':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,61,64,66,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FALSE':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,61,64,66,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'TUPLE_INDEX':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,61,64,66,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,],[12,12,-19,-20,-21,-22,-23,-24,-25,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-28,61,-37,-29,-33,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-31,12,-27,-36,12,-32,12,-30,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,],[3,16,3,-19,-20,-21,-22,-23,-24,-25,-26,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-28,16,16,-37,16,-33,16,16,-3,-4,-5,-6,-7,-8,16,16,16,16,16,16,16,16,16,16,16,-31,3,-27,-36,3,-32,3,-30,16,16,16,]),'NOT':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,61,64,66,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,],[14,32,14,-19,-20,-21,-22,-23,-24,-25,-26,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,32,32,32,-37,32,-33,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-31,14,-27,-36,14,-32,14,-30,32,32,32,]),'$end':([1,2,4,5,6,7,8,9,10,11,33,36,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,62,63,65,67,],[0,-1,-19,-20,-21,-22,-23,-24,-25,-26,-28,-37,-29,-33,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-31,-27,-36,-32,-30,]),'PLUS':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[15,-19,-20,-21,-22,-23,-24,-25,-26,-28,15,15,-37,15,-33,15,-2,-3,-4,-5,-6,-7,-8,15,15,15,15,15,15,15,15,15,15,15,-31,-27,-36,-32,-30,15,15,15,]),'TIMES':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[17,-19,-20,-21,-22,-23,-24,-25,-26,-28,17,17,-37,17,-33,17,17,17,-4,-5,-6,-7,-8,17,17,17,17,17,17,17,17,17,17,17,-31,-27,-36,-32,-30,17,17,17,]),'DIVIDE':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[18,-19,-20,-21,-22,-23,-24,-25,-26,-28,18,18,-37,18,-33,18,18,18,18,-5,-6,-7,-8,18,18,18,18,18,18,18,18,18,18,18,-31,-27,-36,-32,-30,18,18,18,]),'EXPONENT':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[19,-19,-20,-21,-22,-23,-24,-25,-26,-28,19,19,-37,19,-33,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-31,-27,-36,-32,-30,19,19,19,]),'DIV':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[20,-19,-20,-21,-22,-23,-24,-25,-26,-28,20,20,-37,20,-33,20,20,20,20,20,-6,-7,-8,20,20,20,20,20,20,20,20,20,20,20,-31,-27,-36,-32,-30,20,20,20,]),'MOD':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[21,-19,-20,-21,-22,-23,-24,-25,-26,-28,21,21,-37,21,-33,21,21,21,21,21,-6,21,-8,21,21,21,21,21,21,21,21,21,21,21,-31,-27,-36,-32,-30,21,21,21,]),'IN':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[22,-19,-20,-21,-22,-23,-24,-25,-26,-28,22,22,-37,22,-33,22,-2,-3,-4,-5,-6,-7,-8,-9,22,22,22,22,22,22,22,22,22,22,-31,-27,-36,-32,-30,22,22,22,]),'CONS':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[23,-19,-20,-21,-22,-23,-24,-25,-26,-28,23,23,-37,23,-33,23,-2,-3,-4,-5,-6,-7,-8,-9,23,23,23,23,23,23,23,23,23,23,-31,-27,-36,-32,-30,23,23,23,]),'LESS_THAN':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[24,-19,-20,-21,-22,-23,-24,-25,-26,-28,24,24,-37,24,-33,24,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,24,24,24,-31,-27,-36,-32,-30,24,24,24,]),'LESS_EQUAL':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[25,-19,-20,-21,-22,-23,-24,-25,-26,-28,25,25,-37,25,-33,25,-2,-3,-4,-5,-6,-7,-8,-9,-10,25,-12,-13,-14,-15,-16,25,25,25,-31,-27,-36,-32,-30,25,25,25,]),'EQUAL':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[26,-19,-20,-21,-22,-23,-24,-25,-26,-28,26,26,-37,26,-33,26,-2,-3,-4,-5,-6,-7,-8,-9,-10,26,26,-13,-14,-15,-16,26,26,26,-31,-27,-36,-32,-30,26,26,26,]),'NOT_EQUAL':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[27,-19,-20,-21,-22,-23,-24,-25,-26,-28,27,27,-37,27,-33,27,-2,-3,-4,-5,-6,-7,-8,-9,-10,27,27,27,-14,-15,-16,27,27,27,-31,-27,-36,-32,-30,27,27,27,]),'GREATER_THAN':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[28,-19,-20,-21,-22,-23,-24,-25,-26,-28,28,28,-37,28,-33,28,-2,-3,-4,-5,-6,-7,-8,-9,-10,28,28,28,28,-15,-16,28,28,28,-31,-27,-36,-32,-30,28,28,28,]),'GREATER_EQUAL':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[29,-19,-20,-21,-22,-23,-24,-25,-26,-28,29,29,-37,29,-33,29,-2,-3,-4,-5,-6,-7,-8,-9,-10,29,29,29,29,29,-16,29,29,29,-31,-27,-36,-32,-30,29,29,29,]),'ANDALSO':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[30,-19,-20,-21,-22,-23,-24,-25,-26,-28,30,30,-37,-29,-33,30,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,30,30,-31,-27,-36,-32,-30,30,30,30,]),'ORELSE':([2,4,5,6,7,8,9,10,11,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,68,69,70,],[31,-19,-20,-21,-22,-23,-24,-25,-26,-28,31,31,-37,-29,-33,31,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,31,-31,-27,-36,-32,-30,31,31,31,]),'RPAREN':([4,5,6,7,8,9,10,11,12,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,67,68,69,],[-19,-20,-21,-22,-23,-24,-25,-26,36,-28,62,-37,63,-29,-33,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-31,36,-27,-36,-40,-32,-30,-38,-39,]),'COMMA':([4,5,6,7,8,9,10,11,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,62,63,64,65,67,68,69,70,],[-19,-20,-21,-22,-23,-24,-25,-26,-28,-38,-37,64,-29,66,-33,-34,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-31,-27,-36,-40,-32,-30,-38,-39,-35,]),'RBRACKET':([4,5,6,7,8,9,10,11,14,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,70,],[-19,-20,-21,-22,-23,-24,-25,-26,40,-28,-37,-29,65,-33,-34,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,67,-31,-27,-36,-32,-30,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,61,64,66,],[2,33,34,35,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,68,69,70,]),'index':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,61,64,66,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'list':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,61,64,66,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'tuple':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,61,64,66,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,60,10,10,10,]),'intuple':([12,61,],[37,37,]),'inlist':([14,],[39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expression','parser.py',21),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',25),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',26),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',27),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',28),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression_binop','parser.py',29),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','parser.py',30),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','parser.py',31),
  ('expression -> expression IN expression','expression',3,'p_expression_binop','parser.py',32),
  ('expression -> expression CONS expression','expression',3,'p_expression_binop','parser.py',33),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_binop','parser.py',34),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binop','parser.py',35),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_binop','parser.py',36),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression_binop','parser.py',37),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_binop','parser.py',38),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binop','parser.py',39),
  ('expression -> expression ANDALSO expression','expression',3,'p_expression_binop','parser.py',40),
  ('expression -> expression ORELSE expression','expression',3,'p_expression_binop','parser.py',41),
  ('expression -> NUMBER','expression',1,'p_expression_term','parser.py',46),
  ('expression -> STRING','expression',1,'p_expression_term','parser.py',47),
  ('expression -> TRUE','expression',1,'p_expression_term','parser.py',48),
  ('expression -> FALSE','expression',1,'p_expression_term','parser.py',49),
  ('expression -> index','expression',1,'p_expression_term','parser.py',50),
  ('expression -> list','expression',1,'p_expression_term','parser.py',51),
  ('expression -> tuple','expression',1,'p_expression_term','parser.py',52),
  ('expression -> TUPLE_INDEX','expression',1,'p_expression_term','parser.py',53),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_expression','parser.py',57),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','parser.py',61),
  ('expression -> NOT expression','expression',2,'p_expression_negate','parser.py',65),
  ('index -> expression LBRACKET expression RBRACKET','index',4,'p_expression_index','parser.py',69),
  ('index -> TUPLE_INDEX expression tuple','index',3,'p_hash_index','parser.py',73),
  ('list -> LBRACKET inlist RBRACKET','list',3,'p_list','parser.py',77),
  ('list -> LBRACKET RBRACKET','list',2,'p_list_empty','parser.py',81),
  ('inlist -> expression','inlist',1,'p_inlist','parser.py',85),
  ('inlist -> inlist COMMA expression','inlist',3,'p_inlist_comma_expression','parser.py',89),
  ('tuple -> LPAREN intuple RPAREN','tuple',3,'p_tuple','parser.py',94),
  ('tuple -> LPAREN RPAREN','tuple',2,'p_tuple_empty','parser.py',98),
  ('intuple -> expression','intuple',1,'p_intuple','parser.py',102),
  ('intuple -> intuple COMMA expression','intuple',3,'p_intuple_comma_expression','parser.py',106),
  ('intuple -> intuple COMMA','intuple',2,'p_intuple_comma','parser.py',111),
]
